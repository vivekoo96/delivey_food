const Category = require('../models/Category');
const slugify = require('slugify'); // Import slugify library

exports.addCategory = async (req, res) => {
  try {
    console.log('Request Body:', req.body); // Log the incoming request body
    console.log('Request Files:', req.files); // Log the incoming files

    const { name, parent_id, branch_id, row_order, status } = req.body;
    const uploadedImage = req.files?.image?.[0];
    const imageName = uploadedImage?.filename; // Use the exact file name generated by multer
    const slug = slugify(name, { lower: true, strict: true });

    const parentId = parent_id === 'null' || !parent_id ? null : parent_id; // Convert 'null' or empty to null

    const statusValue = status === 'active' ? 1 : 0; // Map 'active' to 1 and 'inactive' to 0

    const categoryId = await Category.addCategory({
      name,
      parent_id: parentId,
      branch_id,
      slug,
      image: imageName, // Save the exact file name
      row_order,
      status: statusValue,
    });
    res.status(201).json({ success: true, message: 'Category added successfully', categoryId });
  } catch (error) {
    console.error('Error adding category:', error); // Log the error
    res.status(500).json({ success: false, message: 'Failed to add category' });
  }
};

exports.getAllCategories = async (req, res) => {
  try {
    const categories = await Category.getAllCategories();
    res.status(200).json({ success: true, data: categories });
  } catch (error) {
    console.error('Error fetching categories:', error);
    res.status(500).json({ success: false, message: 'Failed to fetch categories' });
  }
};

exports.deleteCategory = async (req, res) => {
  try {
    const { id } = req.params;
    await Category.deleteCategory(id);
    res.status(200).json({ success: true, message: 'Category deleted successfully' });
  } catch (error) {
    console.error('Error deleting category:', error);
    res.status(500).json({ success: false, message: 'Failed to delete category' });
  }
};

exports.editCategory = async (req, res) => {
  try {
    console.log('Request Body:', req.body); // Log the incoming request body
    console.log('Request Files:', req.files); // Log the incoming files

    const { id } = req.params;
    const { name, branch_id, status, parent_id } = req.body; // Removed description
    const uploadedImage = req.files?.image?.[0];
    const imageName = uploadedImage?.filename || null; // Use new image if uploaded

    const updatedData = {
      name,
      branch_id,
      status: status === 'active' ? 1 : 0,
      parent_id: parent_id === 'null' || !parent_id ? null : parent_id,
    };

    if (imageName) {
      updatedData.image = imageName;
    }

    await Category.updateCategory(id, updatedData);
    res.status(200).json({ success: true, message: 'Category updated successfully' });
  } catch (error) {
    console.error('Error updating category:', error);
    res.status(500).json({ success: false, message: 'Failed to update category' });
  }
};
